•Requests库的7个主要方法
      方法                             说明
requests.requests()   构造一个请求，支撑以下各方法的基础方法
requests.get()        获取HTML网页的主要方法，对应于HTTP的GET
requests.head()       获取HTML网页头信息的方法，对应于HTTP的HEAD
requests.post()       向HTML网页提交POST请求的方法，对应于HTTP的POST
requests.put()        向HTML网页提交PUT请求的方法，对应于HTTP的PUT
requests.patch()      向HTML网页提交局部修改请求，对应于HTTP的PATCH
requests.delete()     向HTML网页提交删除请求，对应于HTTP的DELETE


•Requests库的get()方法
r = requests.get(url)
构造一个向服务器请求资源的Request对象
返回一个包含服务器资源的Response对象

requests.get(url,params=None,**kwargs)
•url:拟获取页面的url链接
•params:url中的额外参数，字典或字节流格式，可选
•**kwargs:12个控制访问的参数

Response对象的属性
r.status_code        HTTP请求的返回状态，200表示连接成功，404表示连接失败
r.text               HTTP响应内容的字符串形式，即，url对应的页面内容
r.encoding           从HTTP header中猜测的响应内容编码方式
r.apparent_encoding  从内容中分析出的响应内容编码方式(备选编码方式)    
r.content            HTTP响应内容的二进制形式
•r.encoding:如果header中不存在charset,则认为编码为ISO-8859-1
•apparent_encoding:根据网页内容分析出的编码方式,更加准确


爬取网页的通用代码框架
•理解Requests库的异常
requests.ConnectionError        网络连接错误异常，如DNS查询失败、拒绝连接等
requests.HTTPError              HTTP错误异常
requests.URLRequired            URL缺失异常
requests.TooManyRedirects       超过最大重定向次数，产生重定向异常
requests.ConnectTimeout         连接远程服务器超时异常
requests.Timeout                请求URL超时，产生超时异常

r.raise_for_status()            如果不是200，产生异常requests.HTTPError